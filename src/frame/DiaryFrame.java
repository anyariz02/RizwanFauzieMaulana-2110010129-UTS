/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package frame;

import java.awt.event.MouseEvent;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.util.ArrayList;
import java.util.Scanner;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import model.Diary;

/**
 *
 * @author anyariz02
 */
public class DiaryFrame extends javax.swing.JFrame {
    
    int positionX = 0;
    int positionY = 0;

    //inisialisasi variabel yang merupakan class diary
    Diary diary;
    
    //membuat objek baru arraylist dari class diary
    public static ArrayList<Diary> diarys = new ArrayList<Diary>();
    
    //method query 
    public void selectDiary(String keyword){
        ArrayList<Diary> data = new ArrayList<Diary>();
        
    //untuk mencari data (pencarian)
        if(!keyword.equals("")){
            for(Diary d : diarys){
                if(d.getTanggal().toLowerCase().contains(keyword) || 
                        d.getJudul().toLowerCase().contains(keyword.toLowerCase())){
                    data.add(d);
                }
            }
        }else{
                 data = diarys;
        }
        
        //inisialisasi tabel model
        DefaultTableModel model = (DefaultTableModel)tDiary.getModel();
        Object[] row =  new Object[4];
        
        //perulangan untuk mendapatkan data
        for (int i=0; i<data.size(); i++){
            row[0] = data.get(i).getIdDiary();
            row[1] = data.get(i).getTanggal();
            row[2] = data.get(i).getJudul();
            row[3] = data.get(i).getCatatan();
            model.addRow(row);
        }
        
    }
    
    //method untuk menampikan data yang sudah di seet pada selectDiary sebelumnya
    public final void showDiary(String keyword){
        //untuk mereset tabel
        DefaultTableModel model = (DefaultTableModel)tDiary.getModel();
        model.setRowCount(0);
        
        selectDiary(keyword);
        setLocationRelativeTo(this);
        
        //merubah background frame jadi gelap
        getContentPane().setBackground(new java.awt.Color(19, 19, 19));
    }
    
    public DiaryFrame() {
        initComponents();
        showDiary("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pmDiary = new javax.swing.JPopupMenu();
        pmEdit = new javax.swing.JMenuItem();
        pmHapus = new javax.swing.JMenuItem();
        pmLihat = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        tDiary = new javax.swing.JTable();
        btnTambah = new javax.swing.JButton();
        btnKeluar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        iconLogo = new javax.swing.JLabel();
        tfPencarian = new model.CustomTextfield();
        jLabel2 = new javax.swing.JLabel();
        btnEkspor = new javax.swing.JButton();
        btnImpor = new javax.swing.JButton();

        pmDiary.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        pmEdit.setText("Edit");
        pmEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pmEditActionPerformed(evt);
            }
        });
        pmDiary.add(pmEdit);

        pmHapus.setText("Hapus");
        pmHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pmHapusActionPerformed(evt);
            }
        });
        pmDiary.add(pmHapus);

        pmLihat.setText("Lihat Catatan");
        pmLihat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pmLihatActionPerformed(evt);
            }
        });
        pmDiary.add(pmLihat);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        tDiary.setAutoCreateRowSorter(true);
        tDiary.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Tanggal", "Judul", "Isi"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tDiary.setColumnSelectionAllowed(true);
        tDiary.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tDiaryMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tDiary);
        if (tDiary.getColumnModel().getColumnCount() > 0) {
            tDiary.getColumnModel().getColumn(0).setMaxWidth(27);
            tDiary.getColumnModel().getColumn(1).setMinWidth(125);
            tDiary.getColumnModel().getColumn(1).setMaxWidth(125);
            tDiary.getColumnModel().getColumn(3).setMinWidth(0);
            tDiary.getColumnModel().getColumn(3).setPreferredWidth(0);
            tDiary.getColumnModel().getColumn(3).setMaxWidth(0);
        }

        btnTambah.setBackground(new java.awt.Color(27, 188, 155));
        btnTambah.setFont(new java.awt.Font("Cooper Black", 0, 12)); // NOI18N
        btnTambah.setForeground(new java.awt.Color(51, 51, 51));
        btnTambah.setText("Tambah");
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });

        btnKeluar.setBackground(new java.awt.Color(255, 0, 0));
        btnKeluar.setFont(new java.awt.Font("Cooper Black", 0, 12)); // NOI18N
        btnKeluar.setForeground(new java.awt.Color(255, 255, 255));
        btnKeluar.setText("Keluar");
        btnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeluarActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(60, 60, 60));

        jLabel1.setFont(new java.awt.Font("Cooper Black", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Pencarian");

        iconLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/My.png"))); // NOI18N

        tfPencarian.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfPencarianKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(iconLogo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfPencarian, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(iconLogo)
                .addGap(18, 18, 18))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfPencarian, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Cooper Black", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Catatan");

        btnEkspor.setBackground(new java.awt.Color(255, 153, 0));
        btnEkspor.setFont(new java.awt.Font("Cooper Black", 0, 12)); // NOI18N
        btnEkspor.setForeground(new java.awt.Color(255, 255, 255));
        btnEkspor.setText("Ekspor");
        btnEkspor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEksporActionPerformed(evt);
            }
        });

        btnImpor.setBackground(new java.awt.Color(255, 153, 0));
        btnImpor.setFont(new java.awt.Font("Cooper Black", 0, 12)); // NOI18N
        btnImpor.setForeground(new java.awt.Color(255, 255, 255));
        btnImpor.setText("Impor");
        btnImpor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImporActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnTambah))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnEkspor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnImpor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnKeluar))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 541, Short.MAX_VALUE))
                .addContainerGap(18, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnTambah)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnKeluar)
                    .addComponent(btnEkspor)
                    .addComponent(btnImpor))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        //menampilkan frame tambah
        DiaryFrameTambah diaryFrameTambah = new DiaryFrameTambah();
        diaryFrameTambah.setVisible(true);
    }//GEN-LAST:event_btnTambahActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        //agar setiap window aktif dia melakukan reset tabel/refresh tabel
        showDiary("");
    }//GEN-LAST:event_formWindowActivated

    private void tDiaryMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tDiaryMouseReleased
        //agar tabel bisa kita klik kanan memunculkan popupmenu
        if(evt.getButton() == MouseEvent.BUTTON3){
            if(evt.isPopupTrigger() && tDiary.getSelectedRowCount()!=0){
                pmDiary.show(evt.getComponent(),evt.getX(),evt.getY());
            }
        }
    }//GEN-LAST:event_tDiaryMouseReleased

    private void pmEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pmEditActionPerformed
            //setelah baris tabel di klik, kemudian mengambil data dari tabel
            // dan membuat data diary baru
            int i  = tDiary.getSelectedRow();
            TableModel model  = tDiary.getModel();
            diary = new Diary();
            diary.setIdDiary(Integer.parseInt(model.getValueAt(i, 0).toString()));
            diary.setTanggal(model.getValueAt(i, 1).toString());
            diary.setJudul(model.getValueAt(i, 2).toString());
            diary.setCatatan(model.getValueAt(i, 3).toString());
            
            //menampilkan frame edit dengan membawa data baru yg sudah diambil
            DiaryFrameTambah diaryFrameTambah = new DiaryFrameTambah(diary);
            diaryFrameTambah.setVisible(true);
        
    }//GEN-LAST:event_pmEditActionPerformed

    private void pmHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pmHapusActionPerformed
            //pada baris yang diklik menghapus pada tabel dan arraylist
            int i  = tDiary.getSelectedRow();
            DefaultTableModel model  = (DefaultTableModel) tDiary.getModel();
            model.removeRow(i);
            diarys.remove(i);
    }//GEN-LAST:event_pmHapusActionPerformed

    private void btnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeluarActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnKeluarActionPerformed

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
       //set posisi kordinat x dan y menjadi 0
       //merupakan bagian dari panel undecorated agar bisa di drag
        positionX = evt.getX();
        positionY = evt.getY();
    }//GEN-LAST:event_formMousePressed

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        //set posisi kordinat x dan y dari mouse yang digerakkan 
       //merupakan bagian dari panel undecorated agar bisa di drag
        setLocation(evt.getXOnScreen()-positionX, evt.getYOnScreen()-positionY);
    }//GEN-LAST:event_formMouseDragged

    private void btnEksporActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEksporActionPerformed
        try{
            //buat file baru
            BufferedWriter out = new BufferedWriter(new FileWriter("./exportfile/mydiary.txt"));
            
            //mengambil data pada tabel dengan perulangan pada row dan kolom lalau disimpan ke file
            for(int i = 0; i < tDiary.getRowCount(); i++){
                for(int j = 0; j < tDiary.getColumnCount(); j++){
                    out.write(tDiary.getValueAt(i, j).toString()+" ");
                }
                //menambahkan spasi
                out.newLine();
            }
            //close editor
            out.close();
            // tampilkan dialog bisa berhasil
            JOptionPane.showMessageDialog(null, "Catatan berhasil disimpan dalam file");
            //tutup output stream
        } catch(Exception e){
            //dialog jika ada error
            System.err.println("Error : "+ e.getMessage());
        }
    }//GEN-LAST:event_btnEksporActionPerformed

    private void tfPencarianKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfPencarianKeyTyped
        //memanggil method agar bisa melakukan pencarian
        //script pencarian nya ada pada dalam method selectDiary
        showDiary(tfPencarian.getText());
    }//GEN-LAST:event_tfPencarianKeyTyped

    private void btnImporActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImporActionPerformed
        try{
            //menghapus data arraylist yang telah ada
            diarys.clear();
            //mencari file yang telah disimpan
            BufferedReader in = new BufferedReader(new FileReader("./exportfile/mydiary.txt"));   
            
            
            //mengambil data pada file yang disimpan di file dan merubah nya ke string array
            Scanner newData = new Scanner(in);
            while(newData.hasNextLine()){
                String baris = newData.nextLine();
                String[] newData2 = baris.split(" ");
                
                String judul = newData2[1];
                String tanggal = newData2[2];
                String catatan = newData2[3];
                
                //menambahkan array yang sudah di set ke arraylist diary
                Diary impor = new Diary(Integer.parseInt(newData2[0]),judul,tanggal,catatan);
                diarys.add(impor);
            }
             // tampilkan dialog bisa berhasil
            JOptionPane.showMessageDialog(null, "Catatan berhasil diimpor dari file");
        } catch(Exception e){
            //dialog jika ada error
            System.err.println("Error : "+ e.getMessage());
        }
    }//GEN-LAST:event_btnImporActionPerformed

    private void pmLihatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pmLihatActionPerformed
             //setelah baris tabel di klik, kemudian mengambil data dari tabel
            // dan membuat data diary baru
            int i  = tDiary.getSelectedRow();
            TableModel model  = tDiary.getModel();
            
            diary = new Diary();
            diary.setTanggal(model.getValueAt(i, 1).toString());
            diary.setJudul(model.getValueAt(i, 2).toString());
            diary.setCatatan(model.getValueAt(i, 3).toString());
            
            //menampilkan frame detil dengan data baru sudah diambil
            DiaryFrameDetail diaryFrameDetail = new DiaryFrameDetail(diary);
            diaryFrameDetail.setVisible(true);
    }//GEN-LAST:event_pmLihatActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DiaryFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DiaryFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DiaryFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DiaryFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DiaryFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEkspor;
    private javax.swing.JButton btnImpor;
    private javax.swing.JButton btnKeluar;
    private javax.swing.JButton btnTambah;
    private javax.swing.JLabel iconLogo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu pmDiary;
    private javax.swing.JMenuItem pmEdit;
    private javax.swing.JMenuItem pmHapus;
    private javax.swing.JMenuItem pmLihat;
    private static javax.swing.JTable tDiary;
    private model.CustomTextfield tfPencarian;
    // End of variables declaration//GEN-END:variables
}
